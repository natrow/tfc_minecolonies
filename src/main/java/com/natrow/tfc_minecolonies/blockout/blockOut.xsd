<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified">
    <xs:element name="window" type="windowType"/>
    <xs:element name="layout" type="layoutType"/>

    <xs:simpleType name="align">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TOP_LEFT"/>
            <xs:enumeration value="TOP_MIDDLE"/>
            <xs:enumeration value="TOP_RIGHT"/>
            <xs:enumeration value="MIDDLE_LEFT"/>
            <xs:enumeration value="MIDDLE"/>
            <xs:enumeration value="MIDDLE_RIGHT"/>
            <xs:enumeration value="BOTTOM_LEFT"/>
            <xs:enumeration value="BOTTOM_MIDDLE"/>
            <xs:enumeration value="BOTTOM_RIGHT"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="sizePair">
        <xs:restriction base="xs:string">
            <xs:pattern value="([-+]?\d+)(%|px)?( +([-+]?\d+)(%|px)?)?"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="fixedSizePair">
        <xs:restriction base="xs:string">
            <xs:pattern value="(-)?\d+( +\d+)?"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="windowType">
        <xs:group ref="paneContainerGroup" minOccurs="0" maxOccurs="unbounded"/>
        <xs:attribute name="inherit" type="xs:string"/>
        <xs:attribute name="size" type="sizePair"/>
        <xs:attribute name="width" type="xs:string"/>
        <xs:attribute name="height" type="xs:string"/>
        <xs:attribute name="lightbox" type="xs:boolean"/>
        <xs:attribute name="pause" type="xs:boolean"/>
        <xs:attribute name="type" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="VANILLA"/>
                    <xs:enumeration value="FULLSCREEN"/>
                    <xs:enumeration value="FULLSCREEN_VANILLA"/>
                    <xs:enumeration value="FIXED"/>
                    <xs:enumeration value="FIXED_VANILLA"/>
                    <xs:enumeration value="OVERSIZED"/>
                    <xs:enumeration value="OVERSIZED_VANILLA"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="layoutType">
        <xs:group ref="paneContainerGroup" minOccurs="0" maxOccurs="unbounded"/>
    </xs:complexType>

    <!-- Pane basic attributes -->
    <xs:complexType name="paneType">
        <xs:attribute name="id" type="xs:string"/>

        <xs:attribute name="align" type="align"/>
        <xs:attribute name="size" type="sizePair"/>
        <xs:attribute name="width" type="xs:string"/>
        <xs:attribute name="height" type="xs:string"/>
        <xs:attribute name="pos" type="sizePair"/>
        <xs:attribute name="x" type="xs:string"/>
        <xs:attribute name="y" type="xs:string"/>

        <xs:attribute name="visible" type="xs:boolean"/>
        <xs:attribute name="enabled" type="xs:boolean"/>
        <xs:attribute name="tooltip" type="xs:string"/>
        <xs:attribute name="onHoverId" type="xs:string"/>

        <xs:attribute name="style" type="xs:string"/>
    </xs:complexType>

    <!-- Abstract text element -->
    <xs:complexType name="textElementType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:attribute name="textscale" type="xs:string"/>
                <xs:attribute name="textalign" type="align"/>
                <xs:attribute name="color" type="xs:string"/> <!-- overrides all textcolors-->
                <xs:attribute name="textcolor" type="xs:string"/>
                <xs:attribute name="texthovercolor" type="xs:string"/>
                <xs:attribute name="textdisabledcolor" type="xs:string"/>
                <xs:attribute name="shadow" type="xs:boolean"/>
                <xs:attribute name="wrap" type="xs:boolean"/>
                <xs:attribute name="linespace" type="xs:integer"/>
                <xs:attribute name="text" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- View basic attributes and contents -->
    <xs:complexType name="viewType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:group ref="paneContainerGroup" minOccurs="0" maxOccurs="unbounded"/>
                <xs:attribute name="padding" type="xs:integer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Master group for all panes that can be used -->
    <xs:group name="paneContainerGroup">
        <xs:choice>
            <xs:element name="layout" type="layoutElementType"/>
            <xs:element name="view" type="viewType"/>
            <xs:element name="zoomdragview" type="zoomDragType"/>
            <xs:element name="group" type="groupType"/>
            <!-- xs:element name="scrollgroup" type="scrollGroupType"/ -->
            <xs:element name="list" type="listType"/>
            <xs:element name="button" type="buttonType"/>
            <xs:element name="buttonimage" type="buttonImageType"/>
            <xs:element name="toggle" type="toggleType"/>
            <xs:element name="text" type="textType"/>
            <xs:element name="label" type="labelType"/>
            <xs:element name="input" type="inputType"/>
            <xs:element name="image" type="imageType"/>
            <xs:element name="imagerepeat" type="imageRepeatType"/>
            <xs:element name="gradient" type="gradientType"/>
            <xs:element name="box" type="boxType"/>
            <xs:element name="itemicon" type="itemIconType"/>
            <xs:element name="entityicon" type="entityIconType"/>
            <xs:element name="switch" type="switchType"/>
            <xs:element name="dropdown" type="dropdownType"/>
            <xs:element name="treeview" type="treeViewType"/>
        </xs:choice>
    </xs:group>

    <!-- <layout> -->
    <xs:complexType name="layoutElementType">
        <xs:attribute name="source" use="required"/>
    </xs:complexType>

    <!-- <group> -->
    <xs:complexType name="groupType">
        <xs:complexContent>
            <xs:extension base="viewType">
                <xs:attribute name="spacing" type="xs:integer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <switch> -->
    <xs:complexType name="switchType">
        <xs:complexContent>
            <xs:extension base="viewType">
                <xs:attribute name="default" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <box> -->
    <xs:complexType name="boxType">
        <xs:complexContent>
            <xs:extension base="viewType">
                <xs:attribute name="color" type="xs:string"/>
                <xs:attribute name="linewidth" type="xs:decimal"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <list> -->
    <xs:complexType name="listType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:group ref="paneContainerGroup" minOccurs="1" maxOccurs="1"/>
                <xs:attribute name="padding" type="xs:integer"/>
                <xs:attribute name="scrollbarOffset" type="fixedSizePair"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <button> -->
    <xs:complexType name="buttonType">
        <xs:complexContent>
            <xs:extension base="textElementType">
                <xs:attribute name="source" type="xs:string"/>
                <xs:attribute name="imageoffset" type="fixedSizePair"/>
                <xs:attribute name="imagesize" type="fixedSizePair"/>
                <xs:attribute name="highlight" type="xs:string"/>
                <xs:attribute name="highlightoffset" type="fixedSizePair"/>
                <xs:attribute name="highlightsize" type="fixedSizePair"/>
                <xs:attribute name="disabled" type="xs:string"/>
                <xs:attribute name="disabledoffset" type="fixedSizePair"/>
                <xs:attribute name="disabledsize" type="fixedSizePair"/>
                <!-- Label (optional) -->
                <xs:attribute name="label" type="xs:string"/>
                <xs:attribute name="textoffset" type="fixedSizePair"/>
                <xs:attribute name="textbox" type="fixedSizePair"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <label> -->
    <xs:complexType name="labelType">
        <xs:complexContent>
            <xs:extension base="textElementType">
                <xs:attribute name="label" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <text> -->
    <xs:complexType name="textType">
        <xs:complexContent>
            <xs:extension base="textElementType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <itemicon> -->
    <xs:complexType name="itemIconType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:attribute name="item" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <entityicon> -->
    <xs:complexType name="entityIconType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:attribute name="entity" type="xs:string"/>
                <xs:attribute name="count" type="xs:integer"/>
                <xs:attribute name="yaw" type="xs:float"/>
                <xs:attribute name="pitch" type="xs:float"/>
                <xs:attribute name="head" type="xs:float"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <buttonimage> -->
    <xs:complexType name="buttonImageType">
        <xs:complexContent>
            <xs:extension base="buttonType">
                <xs:attribute name="source" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <toggle> -->
    <xs:complexType name="toggleType">
        <xs:complexContent>
            <xs:extension base="buttonType">
                <xs:attribute name="options" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <image> -->
    <xs:complexType name="imageType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:attribute name="source" type="xs:string"/>
                <xs:attribute name="imageoffset" type="fixedSizePair"/>
                <xs:attribute name="imagesize" type="fixedSizePair"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="imageRepeatType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:attribute name="source" type="xs:string"/>
                <xs:attribute name="textureoffset" type="fixedSizePair"/>
                <xs:attribute name="texturesize" type="fixedSizePair"/>
                <xs:attribute name="repeatoffset" type="fixedSizePair"/>
                <xs:attribute name="repeatsize" type="fixedSizePair"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <gradient> -->
    <xs:complexType name="gradientType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:attribute name="gradientstart" type="xs:integer"/>
                <xs:attribute name="gradientend" type="xs:integer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <input> -->
    <xs:complexType name="inputType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:attribute name="text" type="xs:string"/>
                <xs:attribute name="maxlength" type="xs:integer"/>
                <xs:attribute name="color" type="xs:string"/>
                <xs:attribute name="colordisabled" type="xs:string"/>
                <xs:attribute name="shadow" type="xs:boolean"/>
                <xs:attribute name="tab" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <dropdown> -->
    <xs:complexType name="dropdownType">
        <xs:complexContent>
            <xs:extension base="paneType">
                <xs:group ref="paneContainerGroup" minOccurs="1" maxOccurs="1"/>
                <xs:attribute name="padding" type="xs:integer"/>
                <xs:attribute name="maxContentHeight" type="xs:integer"/>
                <xs:attribute name="dropDownSize" type="fixedSizePair"/>
                <xs:attribute name="source" type="xs:string"/>
                <xs:attribute name="textcolor" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <zoom> -->
    <xs:complexType name="zoomDragType">
        <xs:complexContent>
            <xs:extension base="viewType">
                <xs:attribute name="dragfactor" type="xs:double"/>
                <xs:attribute name="dragenabled" type="xs:boolean"/>
                <xs:attribute name="zoomfactor" type="xs:double"/>
                <xs:attribute name="zoomenabled" type="xs:boolean"/>
                <xs:attribute name="minscale" type="xs:double"/>
                <xs:attribute name="maxscale" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- <tree> -->
    <xs:complexType name="treeViewType">
        <xs:complexContent>
            <xs:extension base="zoomDragType">
                <xs:attribute name="nodeVertDist" type="xs:integer"/>
                <xs:attribute name="nodeToLineHorizDist" type="xs:integer"/>
                <xs:attribute name="lineSize" type="xs:integer"/>
                <xs:attribute name="linePackedColor" type="xs:integer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>
